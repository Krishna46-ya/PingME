generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  verified      Boolean   @default(false)
  image         String?
  password      String?

  accounts        Account[]
  OtpVarification OtpVerification[]
  Message         Message[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model OtpVerification {
  id        String   @id @default(cuid())
  userId    String
  otp       String
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Conversation {
  id          String        @id @default(cuid())
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  participant participant[]
  Message     Message[]
}

model participant {
  id             String   @id @default(cuid())
  userId         String
  joinedAt       DateTime @default(now())
  conversationId String

  conversation Conversation @relation(fields: [conversationId], references: [id])
}

model Message {
  id             String   @id @default(cuid())
  content        String
  senderId       String
  conversationId String
  createdAt      DateTime @default(now())

  consversation Conversation @relation(fields: [conversationId], references: [id])
  sender        User         @relation(fields: [senderId], references: [id])
}
